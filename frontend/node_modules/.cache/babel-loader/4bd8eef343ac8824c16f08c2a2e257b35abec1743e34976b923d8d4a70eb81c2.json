{"ast":null,"code":"import axios from \"axios\";\nexport const handleLogin = async (email, pass, phone) => {\n  const loginPayload = {\n    email: email,\n    password: pass,\n    phone: phone\n  };\n  try {\n    const response = await axios.post(\"http://localhost:8080/api/v1/auth/login\", loginPayload);\n    const token = response.data.token;\n    localStorage.setItem(\"token\", token);\n  } catch (error) {\n    if (error.response) {\n      throw new Error(error.response.data.message || 'Login failed. Please try again.');\n    } else if (error.request) {\n      throw new Error('No response from the server. Please check your network connection.');\n    } else {\n      throw new Error('An unexpected error occurred. Please try again.');\n    }\n  }\n};\nexport const handleSignUp = async (firstName, lastName, email, pass) => {\n  const signupPayload = {\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    password: pass\n  };\n  try {\n    await axios.post(\"http://localhost:8080/api/v1/auth/register\", signupPayload);\n  } catch (error) {\n    if (error.response) {\n      throw new Error(error.response.data.message || 'Signup failed. Please try again.');\n    } else if (error.request) {\n      throw new Error('No response from the server. Please check your network connection.');\n    } else {\n      throw new Error('An unexpected error occurred. Please try again.');\n    }\n  }\n};\nexport const postGoogleLoginToken = async idToken => {\n  try {\n    await axios.post(\"http://localhost:8080/api/v1/auth/login/google\", {\n      \"idToken\": idToken\n    }, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n  } catch (e) {\n    throw new Error(e.message);\n  }\n};","map":{"version":3,"names":["axios","handleLogin","email","pass","phone","loginPayload","password","response","post","token","data","localStorage","setItem","error","Error","message","request","handleSignUp","firstName","lastName","signupPayload","postGoogleLoginToken","idToken","headers","Accept","e"],"sources":["/Users/maleehakhalid/Documents/projects/Register-And-Login-using-React-And-Springboot/frontend/src/helpers/apis.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const handleLogin = async (email, pass, phone) => {\n\n    const loginPayload = {\n      email: email,\n      password: pass,\n      phone: phone,\n    }\n\n    try {\n        const response = await axios.post(\"http://localhost:8080/api/v1/auth/login\", loginPayload);\n        const token  =  response.data.token;\n        localStorage.setItem(\"token\", token);\n    } catch (error) {\n        if (error.response) {\n            throw new Error(error.response.data.message || 'Login failed. Please try again.');\n        } else if (error.request) {\n            throw new Error('No response from the server. Please check your network connection.');\n        } else {\n            throw new Error('An unexpected error occurred. Please try again.');\n        }\n    }\n};\n\n  export const handleSignUp = async (firstName,lastName, email, pass) => {\n\n    const signupPayload = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: pass\n    }\n\n    try {\n        await axios.post(\"http://localhost:8080/api/v1/auth/register\", signupPayload);\n    } catch (error) {\n        if (error.response) {\n            throw new Error(error.response.data.message || 'Signup failed. Please try again.');\n        } else if (error.request) {\n            throw new Error('No response from the server. Please check your network connection.');\n        } else {\n            throw new Error('An unexpected error occurred. Please try again.');\n        }\n    }  \n  };\n\n  export const postGoogleLoginToken = async (idToken) => {\n    try {\n      await axios.post(\"http://localhost:8080/api/v1/auth/login/google\",\n        { \"idToken\": idToken },{\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    });\n    } catch (e) {\n      throw new Error(e.message)\n    }\n  };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEC,IAAI,EAAEC,KAAK,KAAK;EAErD,MAAMC,YAAY,GAAG;IACnBH,KAAK,EAAEA,KAAK;IACZI,QAAQ,EAAEH,IAAI;IACdC,KAAK,EAAEA;EACT,CAAC;EAED,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,yCAAyC,EAAEH,YAAY,CAAC;IAC1F,MAAMI,KAAK,GAAKF,QAAQ,CAACG,IAAI,CAACD,KAAK;IACnCE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;EACxC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACN,QAAQ,EAAE;MAChB,MAAM,IAAIO,KAAK,CAACD,KAAK,CAACN,QAAQ,CAACG,IAAI,CAACK,OAAO,IAAI,iCAAiC,CAAC;IACrF,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,EAAE;MACtB,MAAM,IAAIF,KAAK,CAAC,oEAAoE,CAAC;IACzF,CAAC,MAAM;MACH,MAAM,IAAIA,KAAK,CAAC,iDAAiD,CAAC;IACtE;EACJ;AACJ,CAAC;AAEC,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAOC,SAAS,EAACC,QAAQ,EAAEjB,KAAK,EAAEC,IAAI,KAAK;EAErE,MAAMiB,aAAa,GAAG;IACpBF,SAAS,EAAEA,SAAS;IACpBC,QAAQ,EAAEA,QAAQ;IAClBjB,KAAK,EAAEA,KAAK;IACZI,QAAQ,EAAEH;EACZ,CAAC;EAED,IAAI;IACA,MAAMH,KAAK,CAACQ,IAAI,CAAC,4CAA4C,EAAEY,aAAa,CAAC;EACjF,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACN,QAAQ,EAAE;MAChB,MAAM,IAAIO,KAAK,CAACD,KAAK,CAACN,QAAQ,CAACG,IAAI,CAACK,OAAO,IAAI,kCAAkC,CAAC;IACtF,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,EAAE;MACtB,MAAM,IAAIF,KAAK,CAAC,oEAAoE,CAAC;IACzF,CAAC,MAAM;MACH,MAAM,IAAIA,KAAK,CAAC,iDAAiD,CAAC;IACtE;EACJ;AACF,CAAC;AAED,OAAO,MAAMO,oBAAoB,GAAG,MAAOC,OAAO,IAAK;EACrD,IAAI;IACF,MAAMtB,KAAK,CAACQ,IAAI,CAAC,gDAAgD,EAC/D;MAAE,SAAS,EAAEc;IAAQ,CAAC,EAAC;MACzBC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACF,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,MAAM,IAAIX,KAAK,CAACW,CAAC,CAACV,OAAO,CAAC;EAC5B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}