{"ast":null,"code":"var _jsxFileName = \"/Users/maleehakhalid/Documents/projects/teetreewebsite/frontend/tee-tree-website/src/helpers/AuthProvider.js\",\n  _s = $RefreshSig$();\n// import React, { createContext, useContext, useState } from \"react\";\n\n// const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [token, setToken] = useState(null);\n\n//   const login = (userToken) => {\n//     console.lo(userToken)\n//     setToken(userToken);\n//   };\n\n//   const logout = () => {\n//     setToken(null);\n//     localStorage.setItem(\"token\", null)\n//   };\n//   const isAuthenticated = !!token;\n\n//   return (\n//     <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export const useAuth = () => {\n//   const context = useContext(AuthContext);\n//   if (!context) {\n//     throw new Error(\"useAuth must be used within an AuthProvider\");\n//   }\n\n//   return context;\n// };\n\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const login = () => {\n    setIsLoggedIn(true);\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      darkTheme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = AuthProvider;\nexport { AuthProvider, AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","login","logout","Provider","value","darkTheme","toggleTheme","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maleehakhalid/Documents/projects/teetreewebsite/frontend/tee-tree-website/src/helpers/AuthProvider.js"],"sourcesContent":["// import React, { createContext, useContext, useState } from \"react\";\n\n// const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [token, setToken] = useState(null);\n  \n//   const login = (userToken) => {\n//     console.lo(userToken)\n//     setToken(userToken);\n//   };\n\n\n//   const logout = () => {\n//     setToken(null);\n//     localStorage.setItem(\"token\", null)\n//   };\n//   const isAuthenticated = !!token;\n\n//   return (\n//     <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export const useAuth = () => {\n//   const context = useContext(AuthContext);\n//   if (!context) {\n//     throw new Error(\"useAuth must be used within an AuthProvider\");\n//   }\n\n//   return context;\n// };\n\nimport React, { createContext, useState } from 'react';\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const login = () => {\n    setIsLoggedIn(true);\n  };\n\n  const logout = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ darkTheme, toggleTheme }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthProvider, AuthContext };\n"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAEnC,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMS,KAAK,GAAGA,CAAA,KAAM;IAClBD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBF,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEC,SAAS;MAAEC;IAAY,CAAE;IAAAT,QAAA,EACrDA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACZ,EAAA,CAhBIF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAkBlB,SAASA,YAAY,EAAED,WAAW;AAAG,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}