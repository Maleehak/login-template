{"ast":null,"code":"var _jsxFileName = \"/Users/maleehakhalid/Documents/projects/teetreewebsite/frontend/tee-tree-website/src/helpers/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport { Outlet, Navigate } from \"react-router-dom\";\nimport { useAuth } from \"./AuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoutes = () => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth();\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 41\n  }, this);\n};\n_s(PrivateRoutes, \"1LGxUrjNz4q7iKM/2JDC9lJQ3xY=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoutes;\nexport default PrivateRoutes;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"names":["Outlet","Navigate","useAuth","jsxDEV","_jsxDEV","PrivateRoutes","_s","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/maleehakhalid/Documents/projects/teetreewebsite/frontend/tee-tree-website/src/helpers/PrivateRoute.js"],"sourcesContent":["import { Outlet, Navigate } from \"react-router-dom\";\nimport { useAuth } from \"./AuthProvider\";\n\nconst PrivateRoutes = () => {\n  const { isAuthenticated } = useAuth();\n\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\n};\n\nexport default PrivateRoutes;"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAgB,CAAC,GAAGL,OAAO,CAAC,CAAC;EAErC,OAAOK,eAAe,gBAAGH,OAAA,CAACJ,MAAM;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGP,OAAA,CAACH,QAAQ;IAACW,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChE,CAAC;AAACL,EAAA,CAJID,aAAa;EAAA,QACWH,OAAO;AAAA;AAAAW,EAAA,GAD/BR,aAAa;AAMnB,eAAeA,aAAa;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}