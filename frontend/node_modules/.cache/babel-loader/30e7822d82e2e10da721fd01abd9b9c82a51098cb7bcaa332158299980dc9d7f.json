{"ast":null,"code":"// import React, { createContext, useContext, useState } from \"react\";\n\n// const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [token, setToken] = useState(null);\n\n//   const login = (userToken) => {\n//     console.lo(userToken)\n//     setToken(userToken);\n//   };\n\n//   const logout = () => {\n//     setToken(null);\n//     localStorage.setItem(\"token\", null)\n//   };\n//   const isAuthenticated = !!token;\n\n//   return (\n//     <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export const useAuth = () => {\n//   const context = useContext(AuthContext);\n//   if (!context) {\n//     throw new Error(\"useAuth must be used within an AuthProvider\");\n//   }\n\n//   return context;\n// };","map":{"version":3,"names":[],"sources":["/Users/maleehakhalid/Documents/projects/teetreewebsite/frontend/tee-tree-website/src/helpers/AuthProvider.js"],"sourcesContent":["// import React, { createContext, useContext, useState } from \"react\";\n\n// const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [token, setToken] = useState(null);\n  \n//   const login = (userToken) => {\n//     console.lo(userToken)\n//     setToken(userToken);\n//   };\n\n\n//   const logout = () => {\n//     setToken(null);\n//     localStorage.setItem(\"token\", null)\n//   };\n//   const isAuthenticated = !!token;\n\n//   return (\n//     <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export const useAuth = () => {\n//   const context = useContext(AuthContext);\n//   if (!context) {\n//     throw new Error(\"useAuth must be used within an AuthProvider\");\n//   }\n\n//   return context;\n// };"],"mappings":"AAAA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}